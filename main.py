from telethon import TelegramClient, events
from datetime import datetime
import asyncio

# === –¢–≤–æ—ó –¥–∞–Ω—ñ Telegram API (–∑ my.telegram.org) ===
api_id = 22324300
api_hash = "cf6c90f7c5140c6494e37f00dcb6dbd6"

# === ID –∞–∫–∞—É–Ω—Ç—ñ–≤ ===
main_user_id = 1574352010       # —Ç–≤—ñ–π –æ—Å–Ω–æ–≤–Ω–∏–π –∞–∫–∞—É–Ω—Ç (–∑ –Ω—å–æ–≥–æ —á–∏—Ç–∞—î–º–æ –∫–∞–Ω–∞–ª–∏)
second_user_id = 6403321035     # —Ç–≤—ñ–π –¥—Ä—É–≥–∏–π –∞–∫–∞—É–Ω—Ç (—Å—é–¥–∏ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –æ–±—Ä–æ–±–ª–µ–Ω—ñ —Å–∏–≥–Ω–∞–ª–∏)

# === ID –∫–∞–Ω–∞–ª—ñ–≤ ===
first_channel_id = 2488924018   # –ü–µ—Ä—à–∏–π –∫–∞–Ω–∞–ª
second_channel_id = 1861059770  # –î—Ä—É–≥–∏–π –∫–∞–Ω–∞–ª

# === –®–ª—è—Ö –¥–æ —Å–µ—Å—ñ—ó (—â–æ–± –Ω–µ –≤–≤–æ–¥–∏—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∫–æ–∂–µ–Ω —Ä–∞–∑) ===
session_path = "main_desktop_session"

# === –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç–∞ ===
client = TelegramClient(session_path, api_id, api_hash)


# –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ –ø–µ—Ä—à–æ–≥–æ –∫–∞–Ω–∞–ª—É
def process_first_channel_message(message_text):
    """
    - –Ü–≥–Ω–æ—Ä—É—î –≤—ñ–¥—Å–æ—Ç–∫–∏ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    - –ó–∞–≤–∂–¥–∏ –≤–∏—Å—Ç–∞–≤–ª—è—î 2% –≤—ñ–¥ –¥–µ–ø–æ–∑–∏—Ç—É
    """
    # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∑–≥–∞–¥–∫–∏ –ø—Ä–æ –≤—ñ–¥—Å–æ—Ç–∫–∏ –¥–µ–ø–æ–∑–∏—Ç—É (—Ç–∏–ø—É "5% –¥–µ–ø–æ")
    import re
    cleaned_text = re.sub(r"\d+%.*–¥–µ–ø–æ", "", message_text, flags=re.IGNORECASE)
    # –î–æ–¥–∞—î–º–æ —Ñ—ñ–∫—Å–æ–≤–∞–Ω—É —ñ–Ω—Ñ—É –ø—Ä–æ 2% –≤—ñ–¥ –¥–µ–ø–æ–∑–∏—Ç—É
    return cleaned_text.strip() + "\nüí∞ –û–±—Å—è–≥: 2% –≤—ñ–¥ –¥–µ–ø–æ–∑–∏—Ç—É"


# –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ –¥—Ä—É–≥–æ–≥–æ –∫–∞–Ω–∞–ª—É
def process_second_channel_message(message_text):
    """
    - –Ü–≥–Ω–æ—Ä—É—î —à–æ—Ä—Ç –±–µ–∑ —Å—Ç–æ–ø-–ª–æ—Å—É
    - –õ–æ–Ω–≥ –±–µ–∑ —Å—Ç–æ–ø–∞ –±–µ—Ä–µ
    """
    text_lower = message_text.lower()

    # –Ø–∫—â–æ —Ü–µ —à–æ—Ä—Ç –±–µ–∑ —Å—Ç–æ–ø–∞ ‚Äî —ñ–≥–Ω–æ—Ä—É—î–º–æ
    if "—à–æ—Ä—Ç" in text_lower and "—Å—Ç–æ–ø" not in text_lower:
        return None

    return message_text


# –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø—Ä–æ —Ñ—ñ–∫—Å–∞—Ü—ñ—é —Ç–∞ —Å—Ç–æ–ø –≤ –ë–£
def process_trade_updates(message_text, channel_id):
    """
    - –†–æ–∑–ø—ñ–∑–Ω–∞—î —Å–∏–≥–Ω–∞–ª–∏ –Ω–∞ —á–∞—Å—Ç–∫–æ–≤—É –∞–±–æ –ø–æ–≤–Ω—É —Ñ—ñ–∫—Å–∞—Ü—ñ—é
    - –†–µ–∞–≥—É—î –Ω–∞ "—Å—Ç–æ–ø –≤ –±—É"
    """
    text_lower = message_text.lower()

    # –ü–µ—Ä–µ–Ω–æ—Å —Å—Ç–æ–ø–∞ –≤ –ë–£
    if "—Å—Ç–æ–ø –≤ –±—É" in text_lower:
        return "üîÑ –ü–µ—Ä–µ–Ω–æ—Å —Å—Ç–æ–ø-–ª–æ—Å—É –≤ —Ç–æ—á–∫—É –≤—Ö–æ–¥—É"

    # –ü–æ–≤–Ω–∞ —Ñ—ñ–∫—Å–∞—Ü—ñ—è
    if "—Ñ—ñ–∫—Å—É—é –ø–æ–≤–Ω—ñ—Å—Ç—é" in text_lower or "—Ñ–∏–∫—Å–∏—Ä—É—é –ø–æ–ª–Ω–æ—Å—Ç—å—é" in text_lower:
        return "‚úÖ –ü–æ–≤–Ω–∞ —Ñ—ñ–∫—Å–∞—Ü—ñ—è –ø–æ–∑–∏—Ü—ñ—ó"

    # –ß–∞—Å—Ç–∫–æ–≤–∞ —Ñ—ñ–∫—Å–∞—Ü—ñ—è (50%)
    if "50%" in text_lower or "—Ñ–∏–∫—Å–∏—Ä—É—é 50%" in text_lower:
        return "üìâ –ß–∞—Å—Ç–∫–æ–≤–∞ —Ñ—ñ–∫—Å–∞—Ü—ñ—è: 50% –ø–æ–∑–∏—Ü—ñ—ó"

    # –ß–∞—Å—Ç–∫–æ–≤–∞ —Ñ—ñ–∫—Å–∞—Ü—ñ—è —É –ø–µ—Ä—à–æ–º—É –∫–∞–Ω–∞–ª—ñ (33%)
    if channel_id == first_channel_id and ("–µ—â–µ —á–∞—Å—Ç—å —Ñ–∏–∫—Å" in text_lower or "—â–µ —á–∞—Å—Ç" in text_lower):
        return "üìâ –ß–∞—Å—Ç–∫–æ–≤–∞ —Ñ—ñ–∫—Å–∞—Ü—ñ—è: 33% –ø–æ–∑–∏—Ü—ñ—ó"

    return None


# === –û—Å–Ω–æ–≤–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å ===
@client.on(events.NewMessage(chats=[first_channel_id, second_channel_id]))
async def handler(event):
    try:
        original_message = event.message.message
        channel_id = event.chat_id
        channel_name = (await event.get_chat()).title
        timestamp = datetime.now().strftime("%d.%m.%Y %H:%M")

        # –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫–∞–Ω–∞–ª—É
        if channel_id == first_channel_id:
            processed_message = process_first_channel_message(original_message)
        elif channel_id == second_channel_id:
            processed_message = process_second_channel_message(original_message)
            if processed_message is None:
                print(f"‚è© –Ü–≥–Ω–æ—Ä—É—é —à–æ—Ä—Ç –±–µ–∑ —Å—Ç–æ–ø–∞ –∑ {channel_name}")
                return
        else:
            processed_message = original_message

        # –î–æ–¥–∞—Ç–∫–æ–≤–∞ –æ–±—Ä–æ–±–∫–∞ (—Ñ—ñ–∫—Å–∞—Ü—ñ—ó / —Å—Ç–æ–ø –≤ –ë–£)
        trade_update = process_trade_updates(original_message, channel_id)
        if trade_update:
            processed_message += f"\n\n{trade_update}"

        # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        final_message = f"üì° {channel_name} | {timestamp}\n\n{processed_message}"

        # –í–∏–≤–æ–¥–∏–º–æ —É –∫–æ–Ω—Å–æ–ª—å
        print(f"\n–û—Ç—Ä–∏–º–∞–Ω–æ –∑ {channel_name}:\n{final_message}")

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–∞ –¥—Ä—É–≥–∏–π –∞–∫–∞—É–Ω—Ç
        await client.send_message(second_user_id, final_message)

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ –æ–±—Ä–æ–±—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
async def main():
    print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Telegram...")
    await client.start()  # –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É —Å–ø–∏—Ç–∞—î –Ω–æ–º–µ—Ä —ñ –∫–æ–¥
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π! –°–ª—É—Ö–∞—é –∫–∞–Ω–∞–ª–∏...")
    await client.run_until_disconnected()


if __name__ == "__main__":
    asyncio.run(main())